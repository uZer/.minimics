#!/usr/bin/env bash
# display public ipv4

set -eu

# Pretty print command name
COMMAND=${0//\// }
COMMAND=${COMMAND/*mini.d/mini}

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-

# Get default public IP in v6 or v4
ip="$(curl -s --max-time 2 'https://api64.ipify.org' || true)"

# If public IP is IPv6
if [[ "$ip" =~ ^([0-9a-fA-F]{0,4}:){2,7}[0-9a-fA-F]{0,4}$ ]]; then

  # Get IPv4
  ipv4="$(curl -s --max-time 2 'https://api.ipify.org' || true)"

  # If has IPv4, we want to display this first and IPv6 in tooltip
  if [[ "$ipv4" =~ ^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
    displayed_ip=$ipv4
    tooltip=$ip
  # Maybe there is no ipv4 so fallback to v6
  else
    displayed_ip=$ip
    tooltip=$ip
  fi

# If we only have IPv4 don't check v6
elif [[ "$ip" =~ ^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
  displayed_ip=$ip
  tooltip=$ip
else
  class="offline"
fi

jq -cM <<EOF
{
  "text": "${displayed_ip:-""}",
  "tooltip": "${tooltip:-offline}",
  "class": "${class:-online}"
}
EOF
