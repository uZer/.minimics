#!/usr/bin/env bash
# Runs a program on a specified workspace

set -euo pipefail

# Pretty print command name
COMMAND=${0//\// }
COMMAND=${COMMAND/*mini.d/mini}

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-

#################
## ENVIRONMENT ##
#################

# TODO

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-

get_usage () {
  cat << EOF
Runs a program on the specified workspace depending on your window manager.
If the process forks we can't be sure the right workspace will be used.

usage:
  $COMMAND --help, -h
  $COMMAND <workspace> <command>

example:
  $COMMAND name:ï†­ nvim-qt ~/.minimicsrc
  $COMMAND 3 pavucontrol

arguments:
  -h, --help      display this message

EOF
}

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-

[ $# -lt 2 ] && get_usage && exit 0

workspace=$1
shift
command=${*}

case "${XDG_SESSION_DESKTOP:-null}" in
  hyprland) hyprctl dispatch exec [workspace "${workspace}"] -- "${command}" ;;
  i3) i3-msg "workspace ${workspace}; ${command}" ;;
  *) eval "$command" ;;
esac
