# #################
# ## ENVIRONMENT ##
# #################

env=XCURSOR_SIZE,24
env=MOZ_ENABLE_WAYLAND,1
env=QT_QPA_PLATFORM,wayland
env=QT_QPA_PLATFORMTHEME,qt6ct
env=QT_AUTO_SCREEN_SCALE_FACTOR,1
env=QT_ENABLE_HIGHDPI_SCALING,1
env=QT_WAYLAND_DISABLE_WINDOWDECORATION,1
env=GDK_SCALE,1.5
env=GTK_IM_MODULE,cedilla
env=QT_IM_MODULE,cedilla

# unscale XWayland
xwayland {
  force_zero_scaling = true
}

$bar         = sleep 1 ; waybar
$editor      = nvim-qt
$fm          = nemo
$terminal    = alacritty
$clipSel     = copyq toggle
$clipClear   = copyq remove
$colorPicker = hyprpicker -a
$display     = wdisplays
$lock        = mini lock
$menu        = mini menu apps
$passmenu    = mini menu pass
$screenshot  = mini screen shot
$notify      = swaync
$notifyshow  = swaync-client -t
$pywal       = ~/.minimics/bin/pywal -f -q
$pywaltheme  = ~/.minimics/bin/pywal sw16-sixteal-vibrant
$volumeUp    = wpctl set-volume @DEFAULT_AUDIO_SINK@ 3%+
$volumeDown  = wpctl set-volume @DEFAULT_AUDIO_SINK@ 3%-
$volumeMute  = wpctl set-mute   @DEFAULT_AUDIO_SINK@ toggle
$micMute     = wpctl set-mute   @DEFAULT_AUDIO_SOURCE@ toggle
$playerPrev  = playerctl previous
$playerNext  = playerctl next
$playerPause = playerctl play-pause
$lightUp     = brightnessctl set +5%
$lightDown   = brightnessctl set 5%-

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#

# COLORS (using pywal colors)
source = ~/.cache/wal/colors-hyprland.conf

# SCREEN
# See https://wiki.hyprland.org/Configuring/Monitors/
monitor = , preferred, auto, auto
# monitor = eDP-1, highres, 0x0, 2.0

# STARTUP
exec-once = /usr/lib/polkit-kde-authentication-agent-1
exec-once = kanshi
exec-once = swaync
exec-once = nm-applet
exec-once = env QT_QPA_PLATFORM=xcb copyq
# exec-once = xwaylandvideobridge
exec-once = mini startup
exec = kanshictl reload ; sleep 2 ; if ! pgrep waybar; then waybar ; else killall -SIGUSR2 waybar ; fi
exec = killall swaybg ; swaybg -m fill -i "$(cat ~/.cache/wal/wal)" 2>/dev/null &

# I can't use hyprpaper because hyprlang doesn't support rich file processing.
# Like getting the path of the wallpaper to display the proper background.
# I also don't want to deal with preloading or anything else.

# For all categories, see https://wiki.hyprland.org/Configuring/Variables/
input {
  follow_mouse      = 1
  kb_layout         = us
  kb_variant        = intl
  kb_model          = pc105
  sensitivity       = 0 # -1.0 - 1.0, 0 means no modification.
  repeat_delay      = 210
  repeat_rate       = 60
  touchpad {
    natural_scroll  = yes
  }
}

general {
  gaps_in = 6
  gaps_out = 12
  border_size = 0
  col.active_border = $color2
  col.inactive_border = $color0
  layout = dwindle
  allow_tearing = false
}

decoration {
  rounding = 6
  blur {
    enabled = true
    size = 2
    passes = 2
  }
  shadow {
    enabled = true
    range = 3
    render_power = 3
    color = rgba(1a1a1aee)
  }
  # screen_shader = ~/.minimics/shaders/test.glsl
}

# debug {
#   damage_tracking = 0
# }

animations {
    enabled = yes
    bezier = myBezier, 0.05, 0.9, 0.1, 1.05
    animation = windows, 1, 5, myBezier
    animation = windowsOut, 1, 5, default, popin 80%
    animation = border, 1, 10, default
    # animation = borderangle, 1, 6, default
    animation = fade, 1, 5, default
    animation = workspaces, 1, 5, default
}

dwindle {
  pseudotile = yes
  preserve_split = yes
  force_split = 2
}

ecosystem {
  no_update_news = true
  no_donation_nag = true
}

gestures {
  # See https://wiki.hyprland.org/Configuring/Variables/ for more
  workspace_swipe = off
}

misc {
  disable_hyprland_logo = yes
  force_default_wallpaper = 0
  new_window_takes_over_fullscreen = 2
}

windowrulev2 = float,class:^feh
windowrulev2 = float,class:^Nautilus
windowrulev2 = float,class:^SuperCollider
windowrulev2 = float,class:^(k|K)rusader
windowrulev2 = float,class:^(n|N)emo
windowrulev2 = float,class:^qt.ct
windowrulev2 = float,class:^.*ctl
windowrulev2 = float,class:^.*copyq
windowrulev2 = float,class:^.*(c|C)ontrol.*
windowrulev2 = float,class:^.*(s|S)tatistics.*
windowrulev2 = float,title:^.*(c|C)onfiguration.*
windowrulev2 = float,title:^.*(s|S)ettings.*
windowrulev2 = float,title:^.*(p|P)arameters.*
windowrulev2 = float,title:^.*(p|P)references.*
windowrulev2 = float,title:^.*(q|Q)uarks$
windowrulev2 = float,title:^Microsoft Teams Notification$
windowrulev2 = float,title:^Loading Microsoft Teams$

windowrulev2 = workspace name:󰙯,class:discord
windowrulev2 = workspace name:,class:Spotify
windowrulev2 = workspace name:,class:Plexamp
windowrulev2 = workspace name:,class:Slack
windowrulev2 = workspace 10,title:.*Microsoft Teams.*

workspace = name:,gapsin:0,gapsout:0,bordersize:0,rounding:0
workspace = name:󰙯,gapsin:0,gapsout:0,bordersize:0,rounding:0
workspace = name:,gapsin:0,gapsout:0,bordersize:0,rounding:0
workspace = name:,gapsin:0,gapsout:0,bordersize:0,rounding:0
workspace = name:,gapsin:0,gapsout:0,bordersize:0,rounding:0
workspace = name:,gapsin:0,gapsout:0,bordersize:0,rounding:0

# ##############
# ## KEYBOARD ##
# ##############

$mainMod = SUPER

# Example binds, see https://wiki.hyprland.org/Configuring/Binds/ for more
bind = $mainMod, return, exec, $terminal
bind = $mainMod, backspace, exec, $passmenu
bind = $mainMod, R, exec, $pywaltheme
bind = $mainMod, N, exec, $fm
bind = $mainMod, D, exec, $menu
bind = $mainMod, F, fullscreen
bind = $mainMod, C, exec, $clipSel
bind = $mainMod, M, exec, $lock
bind = $mainMod, /, exec, $notifyshow
bind = $mainMod SHIFT, C, exec, $clipClear
bind = $mainMod ALT, P, exec, $colorPicker
bind = $mainMod SHIFT, M, exec, $lock privacy
bind = $mainMod SHIFT, R, exec, $pywal
bind = $mainMod SHIFT, space, togglefloating
bind = $mainMod SHIFT, Q, killactive
bind = $mainMod SHIFT, E, exit

# dwingle
bind = $mainMod, V, togglesplit

# Media keys
bind = , Print,                 exec, $screenshot
bind = , XF86AudioRaiseVolume,  exec, $volumeUp
bind = , XF86AudioLowerVolume,  exec, $volumeDown
bind = , XF86AudioMute,         exec, $volumeMute
bind = , XF86AudioMicMute,      exec, $micMute
bind = , XF86MonBrightnessUp,   exec, $lightUp
bind = , XF86MonBrightnessDown, exec, $lightDown
bind = , XF86AudioPrev,         exec, $playerPrev
bind = , XF86AudioNext,         exec, $playerNext
bind = , XF86AudioPlay,         exec, $playerPause
bind = , XF86Display,           exec, $display

# Move focus with mainMod + arrow keys or vim keys
bind = $mainMod, left,  movefocus, l
bind = $mainMod, right, movefocus, r
bind = $mainMod, up,    movefocus, u
bind = $mainMod, down,  movefocus, d
bind = $mainMod, h,     movefocus, l
bind = $mainMod, l,     movefocus, r
bind = $mainMod, k,     movefocus, u
bind = $mainMod, j,     movefocus, d

# Move window with mainMod + shift + arrow keys or vim keys
bind = $mainMod SHIFT, left,  movewindow, l
bind = $mainMod SHIFT, right, movewindow, r
bind = $mainMod SHIFT, up,    movewindow, u
bind = $mainMod SHIFT, down,  movewindow, d
bind = $mainMod SHIFT, h,     movewindow, l
bind = $mainMod SHIFT, l,     movewindow, r
bind = $mainMod SHIFT, k,     movewindow, u
bind = $mainMod SHIFT, j,     movewindow, d

# Switch workspaces with mainMod + [0-9]
bind = $mainMod, 1, workspace, 1
bind = $mainMod, 2, workspace, 2
bind = $mainMod, 3, workspace, 3
bind = $mainMod, 4, workspace, 4
bind = $mainMod, 5, workspace, 5
bind = $mainMod, 6, workspace, 6
bind = $mainMod, 7, workspace, 7
bind = $mainMod, 8, workspace, 8
bind = $mainMod, 9, workspace, 9
bind = $mainMod, 0, workspace, 10
bind = $mainMod, t, workspace, name:
bind = $mainMod, y, workspace, name:󰙯
bind = $mainMod, u, workspace, name:
bind = $mainMod, i, workspace, name:
bind = $mainMod, o, workspace, name:
bind = $mainMod, p, workspace, name:

# move workspaces to another screen
bind = $mainMod ALT, 1, movecurrentworkspacetomonitor, 0
bind = $mainMod ALT, 2, movecurrentworkspacetomonitor, 1
bind = $mainMod ALT, 3, movecurrentworkspacetomonitor, 2
bind = $mainMod ALT, 4, movecurrentworkspacetomonitor, 3
bind = $mainMod ALT, j, movecurrentworkspacetomonitor, d
bind = $mainMod ALT, k, movecurrentworkspacetomonitor, u
bind = $mainMod ALT, h, movecurrentworkspacetomonitor, l
bind = $mainMod ALT, l, movecurrentworkspacetomonitor, r

# Move active window to a workspace with mainMod + SHIFT + [0-9]
bind = $mainMod SHIFT, 1, movetoworkspacesilent, 1
bind = $mainMod SHIFT, 2, movetoworkspacesilent, 2
bind = $mainMod SHIFT, 3, movetoworkspacesilent, 3
bind = $mainMod SHIFT, 4, movetoworkspacesilent, 4
bind = $mainMod SHIFT, 5, movetoworkspacesilent, 5
bind = $mainMod SHIFT, 6, movetoworkspacesilent, 6
bind = $mainMod SHIFT, 7, movetoworkspacesilent, 7
bind = $mainMod SHIFT, 8, movetoworkspacesilent, 8
bind = $mainMod SHIFT, 9, movetoworkspacesilent, 9
bind = $mainMod SHIFT, 0, movetoworkspacesilent, 10
bind = $mainMod SHIFT, t, movetoworkspacesilent, name:
bind = $mainMod SHIFT, y, movetoworkspacesilent, name:󰙯
bind = $mainMod SHIFT, u, movetoworkspacesilent, name:
bind = $mainMod SHIFT, i, movetoworkspacesilent, name:
bind = $mainMod SHIFT, o, movetoworkspacesilent, name:
bind = $mainMod SHIFT, p, movetoworkspacesilent, name:

# Example special workspace (scratchpad)
bind = $mainMod, S, togglespecialworkspace, magic
bind = $mainMod SHIFT, S, movetoworkspace, special:magic

# Scroll through existing workspaces with mainMod + scroll
bind = $mainMod, mouse_down, workspace, e+1
bind = $mainMod, mouse_up, workspace, e-1

# Move/resize windows with mainMod + LMB/RMB and dragging
bindm = $mainMod, mouse:272, movewindow
bindm = $mainMod, mouse:273, resizewindow

# vim: set filetype=hyprlang :
